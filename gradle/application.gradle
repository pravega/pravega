/**
 * Copyright Pravega Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import java.util.regex.Matcher

plugins.withId('application') {
    configurations.archives.with {
        artifacts.remove artifacts.find { it.hasProperty('archiveTask') && it.archiveTask.is(distZip) }
        artifacts.remove artifacts.find { it.hasProperty('archiveTask') && it.archiveTask.is(distTar) }
    }

    task pathingJar(type: Jar) {
        appendix = 'pathing'

        // Delay configuring the manifest to avoid resolving the configuration
        doFirst {
            manifest {
                attributes("Class-Path":
                        configurations.runtime.collect { it.name }.join(' ') + ' ' +
                        jar.archiveName
                )
            }
        }
    }
    applicationDistribution.from(pathingJar) {
        into "lib"
    }

    startScripts {
        doLast {
            unixScript.text = unixScript.text.replace('PRAVEGA_APP_HOME', '\$APP_HOME')
            windowsScript.text = windowsScript.text.replace('PRAVEGA_APP_HOME', '%~dp0..')
            // Replace the classpath on windows with the pathing JAR and the main archive
            windowsScript.text = windowsScript.text.replaceAll('set CLASSPATH=.*', Matcher.quoteReplacement(
                    "set CLASSPATH=%APP_HOME%\\lib\\${pathingJar.archiveName};%APP_HOME%\\lib\\${jar.archiveName}"))
        }
    }
}