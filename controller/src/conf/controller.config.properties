###
# Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#

## Instructions for using this file:
# 1. Settings are namespaced. The prefix indicates the component for which the configuration applies.
# 2. All settings have default values hardcoded inside the code. The purpose of this file is to provide Environment Variable
#    references so that they may fetch values via such an indirection.
# 3. Each of these settings can be overridden from the command like by specifying a Java System Property.
# Example: setting 'controller.service.port' has a default value of 9090, but it can be overridden to a different
#          value via the command-line:
#                java -Dcontroller.service.port=5689 ...
#          which will set the value for that setting to 5689, regardless of what this file contains.

controller.cluster.name=${CLUSTER_NAME}
controller.container.count=${CONTAINER_COUNT}
controller.hostMonitor.enable=${HOST_MONITOR_ENABLE}
controller.rebalance.interval.seconds.min=${CLUSTER_MIN_REBALANCE_INTERVAL}

controller.request.replyWithStackTraceOnError.enable=${REPLY_WITH_STACK_TRACE_ON_ERROR}
controller.request.tracing.enable=${REQUEST_TRACING_ENABLED}

controller.service.rpc.listener.port=${CONTROLLER_SERVER_PORT}
controller.service.rpc.published.host.nameOrIp=${CONTROLLER_RPC_PUBLISHED_HOST}
controller.service.rpc.published.port=${CONTROLLER_RPC_PUBLISHED_PORT}
controller.service.rest.listener.host.ip=${REST_SERVER_IP}
controller.service.rest.listener.port=${REST_SERVER_PORT}
controller.service.asyncTaskPool.size=${ASYNC_TASK_POOL_SIZE}

controller.segmentstore.connect.host.nameOrIp=${SERVICE_HOST_IP}
controller.segmentstore.connect.port=${SERVICE_HOST_PORT}

controller.rest.tlsKeyStoreFile=${REST_KEYSTORE_FILE_PATH}
controller.rest.tlsKeyStorePasswordFile=${REST_KEYSTORE_PASSWORD_FILE_PATH}

controller.security.auth.enable=${AUTHORIZATION_ENABLED}
controller.security.auth.delegationToken.signingKey.basis=${TOKEN_SIGNING_KEY}
controller.security.auth.delegationToken.ttl.seconds=${ACCESS_TOKEN_TTL_IN_SECONDS}
controller.security.tls.enable=${TLS_ENABLED}
controller.security.tls.server.certificate.location=${TLS_CERT_FILE}
controller.security.tls.trustStore.location=${TLS_TRUST_STORE}
controller.security.tls.server.privateKey.location=${TLS_KEY_FILE}

controller.security.pwdAuthHandler.accountsDb.location=${USER_PASSWORD_FILE}

controller.zk.connect.uri=${ZK_URL}
controller.zk.connect.retries.interval.milliseconds=${ZK_RETRY_SLEEP_MS}
controller.zk.connect.retries.count.max=${ZK_MAX_RETRIES}
controller.zk.connect.session.timeout.milliseconds=${ZK_SESSION_TIMEOUT_MS}
controller.zk.connect.security.enable=${SECURE_ZK}
controller.zk.connect.security.tls.trustStore.location=${ZK_TRUSTSTORE_FILE_PATH}
controller.zk.connect.security.tls.trustStore.pwd.location=${ZK_TRUSTSTORE_PASSWORD_FILE_PATH}

controller.retention.frequency.minutes=${RETENTION_FREQUENCY_MINUTES}
controller.retention.bucket.count=${BUCKET_COUNT}
controller.retention.thread.count=${RETENTION_THREAD_POOL_SIZE}

controller.transaction.lease.count.min=${MIN_LEASE_VALUE}
controller.transaction.lease.count.max=${MAX_LEASE_VALUE}
controller.transaction.ttl.hours=${COMPLETED_TXN_TTL_IN_HOURS}

#controller.scale.request.stream.name=_requeststream
#controller.scale.request.readerGroup.name=scaleGroup
