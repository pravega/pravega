#
# Copyright (c) 2017 Dell Inc., or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Description of the Pravega Controller APIs.
swagger: '2.0'
info:
  version: "0.0.1"
  title: Pravega Controller APIs
basePath: /v1
schemes:
  - http
paths:
  /scopes:
    get:
      operationId: listScopes
      description: List all scopes in the system
      produces:
        - application/json
      responses:
        200:
          description: List of scope objects
          schema:
            $ref: "#/definitions/ScopesList"
        500:
          description: Server error
    post:
      operationId: createScope
      description: Creates a new scope
      consumes:
        - application/json
      parameters:
        - in: body
          name: CreateScopeRequest
          description: The scope configuration
          required: true
          schema:
            type: object
            properties:
              scopeName:
                type: string
      produces:
        - application/json
      responses:
        201:
          description: Successfully created the scope
          schema:
            $ref: "#/definitions/ScopeProperty"
        409:
          description: Scope already exists
        500:
          description: Server error
  /scopes/{scopeName}:
    parameters:
      - in: path
        name: scopeName
        description: Scope name
        required: true
        type: string
    get:
      operationId: getScope
      description: Retrieve scope
      produces:
        - application/json
      responses:
        200:
          description: Successfully retrieved the scope
          schema:
            $ref: "#/definitions/ScopeProperty"
        404:
          description: Scope not found
        500:
          description: Server error
    delete:
      operationId: deleteScope
      description: Delete a scope
      responses:
        204:
          description: Successfully deleted the scope
        404:
          description: Scope not found
        412:
          description: Cannot delete scope which has non-empty list of streams
        500:
          description: Server error
  /scopes/{scopeName}/streams:
    parameters:
      - in: path
        name: scopeName
        description: Scope name
        required: true
        type: string
    get:
      parameters:
        - in: query
          name: showInternalStreams
          description: Flag whether to display only system created streams
          required: false
          type: string
      operationId: listStreams
      description: List streams within the given scope
      produces:
        - application/json
      responses:
        200:
          description: List of stream objects
          schema:
            $ref: "#/definitions/StreamsList"
        404:
          description: Scope not found
        500:
          description: Server error
    post:
      operationId: createStream
      description: Creates a new stream
      consumes:
        - application/json
      parameters:
        - in: body
          name: CreateStreamRequest
          description: The stream configuration
          required: true
          schema:
            type: object
            properties:
              streamName:
                type: string
              scalingPolicy:
                  $ref: "#/definitions/ScalingConfig"
              retentionPolicy:
                  $ref: "#/definitions/RetentionConfig"
      produces:
        - application/json
      responses:
        201:
          description: Successful created the stream
          schema:
            $ref: "#/definitions/StreamProperty"
        404:
          description: Scope not found
        409:
          description: Stream already exists
        500:
          description: Server error
  /scopes/{scopeName}/streams/{streamName}:
    parameters:
      - in: path
        name: scopeName
        description: Scope name
        required: true
        type: string
      - in: path
        name: streamName
        description: Stream name
        required: true
        type: string
    get:
      operationId: getStream
      description: Fetch the stream properties
      produces:
        - application/json
      responses:
        200:
          description: Found stream configuration
          schema:
            $ref: "#/definitions/StreamProperty"
        404:
          description: Scope or stream not found
        500:
          description: Server error
    put:
      operationId: updateStream
      consumes:
        - application/json
      parameters:
        - in: body
          name: UpdateStreamRequest
          description: The new stream configuration
          required: true
          schema:
            type: object
            properties:
              scalingPolicy:
                  $ref: "#/definitions/ScalingConfig"
              retentionPolicy:
                  $ref: "#/definitions/RetentionConfig"
      produces:
        - application/json
      responses:
        200:
          description: Successfully updated the stream configuration
          schema:
            $ref: "#/definitions/StreamProperty"
        404:
          description: Scope or stream not found
        500:
          description: Server error
    delete:
      operationId: deleteStream
      description: Delete a stream
      responses:
        204:
          description: Successfully deleted the stream
        404:
          description: Stream not found
        412:
          description: Cannot delete stream since it is not sealed
        500:
          description: Server error
  /scopes/{scopeName}/streams/{streamName}/state:
    parameters:
      - in: path
        name: scopeName
        description: Scope name
        required: true
        type: string
      - in: path
        name: streamName
        description: Stream name
        required: true
        type: string
    put:
      operationId: updateStreamState
      description: Updates the current state of the stream
      consumes:
        - application/json
      parameters:
        - in: body
          name: UpdateStreamStateRequest
          description: The state info to be updated
          required: true
          schema:
            $ref: "#/definitions/StreamState"
      produces:
        - application/json
      responses:
        200:
          description: Successfully updated the stream state
          schema:
            $ref: "#/definitions/StreamState"
        404:
          description: Scope or stream not found
        500:
          description: Server error

definitions:
  StreamsList:
    type: object
    properties:
      streams:
        type: array
        items:
          $ref: "#/definitions/StreamProperty"
  ScopesList:
    type: object
    properties:
      scopes:
        type: array
        items:
          $ref: "#/definitions/ScopeProperty"
  ScopeProperty:
    type: object
    properties:
      scopeName:
        type: string
  StreamProperty:
    type: object
    properties:
      scopeName:
        type: string
      streamName:
        type: string
      scalingPolicy:
          $ref: "#/definitions/ScalingConfig"
      retentionPolicy:
          $ref: "#/definitions/RetentionConfig"
  ScalingConfig:
    type: object
    properties:
      type:
        type: string
        enum:
        - FIXED_NUM_SEGMENTS
        - BY_RATE_IN_KBYTES_PER_SEC
        - BY_RATE_IN_EVENTS_PER_SEC
      targetRate:
        type: integer
        format: int32
      scaleFactor:
        type: integer
        format: int32
      minSegments:
        type: integer
        format: int32
  RetentionConfig:
    type: object
    properties:
      type:
        type: string
        enum:
        - LIMITED_DAYS
        - LIMITED_SIZE_MB
      value:
        type: integer
        format: int64
  StreamState:
    type: object
    properties:
      streamState:
        type: string
        enum:
        - SEALED
